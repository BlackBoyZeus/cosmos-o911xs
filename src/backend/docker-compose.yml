version: '3.8'

services:
  backend:
    build: .
    image: cosmos-wfm-backend:${TAG:-latest}
    container_name: cosmos-wfm-backend
    ports:
      - "3000:3000"
      - "9090:9090"
    volumes:
      - ./src:/app/src:ro
      - ./node_modules:/app/node_modules:delegated
      - model-cache:/app/cache
      - log-data:/var/log/cosmos-wfm
    env_file: .env
    deploy:
      resources:
        limits:
          cpus: '8'
          memory: 32G
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"
    restart: unless-stopped
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - backend-net
    security_opt:
      - no-new-privileges:true
      - seccomp=default

  mongodb:
    image: mongo:6.0.12
    container_name: cosmos-wfm-mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_PASSWORD}
      MONGO_INITDB_DATABASE: ${DB_NAME}
    volumes:
      - mongodb-data:/data/db
      - mongodb-config:/data/configdb
    ports:
      - "27017:27017"
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 8G
    networks:
      - backend-net
    security_opt:
      - no-new-privileges:true
    command: ["--auth", "--replSet", "rs0", "--bind_ip_all"]

  redis:
    image: redis:7.0.12-alpine
    container_name: cosmos-wfm-redis
    command: redis-server --requirepass ${REDIS_PASSWORD} --maxmemory 4gb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
    networks:
      - backend-net
    security_opt:
      - no-new-privileges:true

volumes:
  mongodb-data:
    name: cosmos-wfm-mongodb-data
    driver: local
  mongodb-config:
    name: cosmos-wfm-mongodb-config
    driver: local
  redis-data:
    name: cosmos-wfm-redis-data
    driver: local
  model-cache:
    name: cosmos-wfm-model-cache
    driver: local
  log-data:
    name: cosmos-wfm-log-data
    driver: local

networks:
  backend-net:
    name: cosmos-wfm-backend-net
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16